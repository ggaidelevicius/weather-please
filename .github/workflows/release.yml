name: Create Release from package.json

permissions:
  contents: write

on:
  push:
    branches:
      - main
  workflow_run:
    workflows: ['CI/CD Pipeline']
    types: [completed]

jobs:
  release:
    if:
      contains(github.event.head_commit.message, '(release)') &&
      (github.event_name == 'push' || github.event.workflow_run.conclusion ==
      'success')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests before release
        run: pnpm test

      - name: Run linting before release
        run: pnpm lint

      - name: Read version from package.json
        id: package_version
        run: echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Check if tag already exists
        id: check_tag
        run: |
          if git rev-parse "v${VERSION}" >/dev/null 2>&1; then
            echo "Tag v${VERSION} already exists. Skipping release."
            exit 1
          fi

      - name: Create Git tag and push
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag "v${VERSION}"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git "v${VERSION}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          generate_release_notes: true
