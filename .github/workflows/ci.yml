name: CI Pipeline

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  lint-and-test:
    name: Lint & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.4

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linting
        run: pnpm lint

      - name: Run tests
        run: pnpm test

  release-validation:
    name: Release Validation
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: |
      contains(github.event.head_commit.message, '(release)') ||
      (github.event_name == 'pull_request' && 
       contains(github.event.pull_request.title, '(release)'))

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate version format
        run: |
          VERSION=$(jq -r .version package.json)
          echo "Release version: $VERSION"
          
          # Check semantic versioning format
          if [[ ! $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version must follow semantic versioning (x.y.z)"
            exit 1
          fi

      - name: Check if tag exists
        run: |
          VERSION=$(jq -r .version package.json)
          if git ls-remote --tags origin | grep -q "refs/tags/v${VERSION}$"; then
            echo "Error: Tag v${VERSION} already exists"
            exit 1
          fi
          echo "âœ… Tag v${VERSION} is available"